def simplify_lammps_data(input_file, output_file):

    # Define atomic number lookup for atom types
    lookup = {1: "6", 2: "1", 3: "7", 4: "8"}  # C, H, N, O -> atomic numbers

    with open(input_file, 'r') as f:
        lines = f.readlines()

    output = []
    atom_section = False

    # Add headers
    output.append("LAMMPS data file generated by OpenBabel\n\n")
    
    # Extract number of atoms
    for line in lines:
        if "atoms" in line:
            output.append(line.strip() + "\n")
        elif "atom types" in line:
            output.append("8 atom types\n")
        elif "xlo xhi" in line or "ylo yhi" in line or "zlo zhi" in line:
            output.append(line)

    # Blank line between box bounds and "Atoms"
    output.append("\nAtoms\n\n")

    # Find atom section and extract data
    for i, line in enumerate(lines):
        if line.strip() == "Atoms":
            atom_section = True
            continue
        if atom_section:
            if line.strip() == "":
                continue
            if line.strip().startswith("#"):
                continue
            parts = line.split()
            if len(parts) < 7:
                break
            atom_id = parts[0]
            atom_type_raw = int(parts[2])
            atom_type = lookup.get(atom_type_raw, str(atom_type_raw))
            x, y, z = parts[4], parts[5], parts[6]
            comment = " ".join(line.split("#")[1:]).strip() if "#" in line else ""
            new_line = f"{atom_id} {atom_type} {x} {y} {z}"
            if comment:
                new_line += f" # {comment}"
            output.append(new_line + "\n")

    # Write to output file
    with open(output_file, 'w') as f:
        f.writelines(output)

if __name__ == "__main__":
    nm = 14
    simplify_lammps_data(f'chignolin_solvated_raw_{nm}.lmpdat',
                        f'chignolin_solvated_{nm}.lmpdat')
